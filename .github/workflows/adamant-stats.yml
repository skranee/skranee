name: Update ADAMANT contribution stats

on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:
  push:
    paths:
      - "README.md"

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update stats in README
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            const owner = 'Adamant-im';
            const repo = 'adamant-im';
            const username = 'skranee'; // твой GitHub username

            const now = Date.now();
            const sinceISO = new Date(now - 183*24*60*60*1000).toISOString();
            const sinceDate = sinceISO.slice(0,10);

            // --- 1. Commits + lines ---
            let page = 1;
            let allCommits = [];
            while (true) {
              const commits = await github.request('GET /repos/{owner}/{repo}/commits', {
                owner, repo, author: username, since: sinceISO, per_page: 100, page
              });
              if (commits.data.length === 0) break;
              allCommits = allCommits.concat(commits.data);
              page++;
            }

            let additions = 0;
            let deletions = 0;
            for (const c of allCommits) {
              const sha = c.sha;
              const details = await github.request('GET /repos/{owner}/{repo}/commits/{sha}', {
                owner, repo, sha
              });
              additions += details.data.stats.additions;
              deletions += details.data.stats.deletions;
            }
            const commitCount = allCommits.length;

            // --- 2. PRs ---
            const prsOpened = (await github.request('GET /search/issues', {
              q: `repo:${owner}/${repo} type:pr author:${username} created:>=${sinceDate}`
            })).data.total_count;

            const prsMerged = (await github.request('GET /search/issues', {
              q: `repo:${owner}/${repo} type:pr author:${username} is:merged merged:>=${sinceDate}`
            })).data.total_count;

            // --- 3. Issues ---
            const issuesOpened = (await github.request('GET /search/issues', {
              q: `repo:${owner}/${repo} type:issue author:${username} created:>=${sinceDate}`
            })).data.total_count;

            const lines = [
              `**Last 6 months in [${owner}/${repo}](https://github.com/${owner}/${repo}):**`,
              `- 🧩 [Commits](https://github.com/${owner}/${repo}/commits?author=${username}): **${commitCount}**`,
              `- 📈 Lines added: **${additions.toLocaleString()}**`,
              `- 📉 Lines removed: **${deletions.toLocaleString()}**`,
              `- 🔀 [PRs opened](https://github.com/${owner}/${repo}/pulls?q=is%3Apr+author%3A${username}+created%3A%3E%3D${sinceDate}): **${prsOpened}** (merged: **${prsMerged}**)`,
              `- ❗ [Issues opened](https://github.com/${owner}/${repo}/issues?q=is%3Aissue+author%3A${username}+created%3A%3E%3D${sinceDate}): **${issuesOpened}**`
            ].join('\n');

            const start = '<!-- ADAMANT-STATS:START -->';
            const end = '<!-- ADAMANT-STATS:END -->';

            const path = 'README.md';
            let readme = fs.readFileSync(path, 'utf8');
            const newBlock = `${start}\n${lines}\n${end}`;
            readme = readme.replace(new RegExp(`${start}[\\s\\S]*?${end}`), newBlock);
            fs.writeFileSync(path, readme);

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update ADAMANT repo contribution stats"
          push_options: --force
